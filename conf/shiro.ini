#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

;[users]
;# List of users with their password allowed to access Zeppelin.
;# To use a different strategy (LDAP / Database / ...) check the shiro doc at http://shiro.apache.org/configuration.html#Configuration-INISections
;admin = 123, admin
;user1 = 123, group_member_teamA, group_leader_teamA
;user2 = 123, group_member_teamA
;user3 = 123, group_member_teamB


# Sample LDAP configuration, for user Authentication, currently tested for single Realm
[main]
### A sample for configuring Active Directory Realm
#activeDirectoryRealm = org.apache.zeppelin.server.ActiveDirectoryGroupRealm
#activeDirectoryRealm.systemUsername = userNameA

#use either systemPassword or hadoopSecurityCredentialPath, more details in http://zeppelin.apache.org/docs/latest/security/shiroauthentication.html
#activeDirectoryRealm.systemPassword = passwordA
#activeDirectoryRealm.hadoopSecurityCredentialPath = jceks://file/user/zeppelin/zeppelin.jceks
#activeDirectoryRealm.searchBase = CN=Users,DC=SOME_GROUP,DC=COMPANY,DC=COM
#activeDirectoryRealm.url = ldap://ldap.test.com:389
#activeDirectoryRealm.groupRolesMap = "CN=admin,OU=groups,DC=SOME_GROUP,DC=COMPANY,DC=COM":"admin","CN=finance,OU=groups,DC=SOME_GROUP,DC=COMPANY,DC=COM":"finance","CN=hr,OU=groups,DC=SOME_GROUP,DC=COMPANY,DC=COM":"hr"
#activeDirectoryRealm.authorizationCachingEnabled = false

### A sample for configuring LDAP Directory Realm
#ldapRealm = org.apache.zeppelin.server.LdapGroupRealm
## search base for ldap groups (only relevant for LdapGroupRealm):
#ldapRealm.contextFactory.environment[ldap.searchBase] = dc=COMPANY,dc=COM
#ldapRealm.contextFactory.url = ldap://ldap.test.com:389
#ldapRealm.userDnTemplate = uid={0},ou=Users,dc=COMPANY,dc=COM
#ldapRealm.contextFactory.authenticationMechanism = SIMPLE

### A sample for configuring ZeppelinHub Realm
#zeppelinHubRealm = org.apache.zeppelin.realm.ZeppelinHubRealm
## Url of ZeppelinHub
#zeppelinHubRealm.zeppelinhubUrl = https://www.zeppelinhub.com
#securityManager.realms = $zeppelinHubRealm

#credentialMatcher是用来处理加密之后的密码的匹配问题的
sha256Matcher = org.apache.shiro.authc.credential.HashedCredentialsMatcher
sha256Matcher.hashAlgorithmName = SHA-256
sha256Matcher.storedCredentialsHexEncoded = false
sha256Matcher.hashIterations = 1024

;mysqlJdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
;mysqlJdbcRealm.dataSource.driverClassName=com.mysql.jdbc.Driver
;mysqlJdbcRealm.dataSource.connectionTimeout = 30000
;mysqlJdbcRealm.dataSource.username = root
;mysqlJdbcRealm.dataSource.password = mysql
;mysqlJdbcRealm.credentialsMatcher = $sha256Matcher


ds = com.mysql.jdbc.jdbc2.optional.MysqlDataSource
ds.driver.class = com.mysql.jdbc.Driver
ds.databaseName = zeppelin
ds.serverName = localhost
ds.loginTimeout = 30000
ds.user = root
ds.password = mysql
;#ds.explicitUrl=true

mysqlJdbcRealm = org.apache.zeppelin.realm.WritableJdbcRealm
mysqlJdbcRealm.dataSource = $ds
#realm的cache设置成false，可以直接修改mysql库，新权限可以立即生效，如果为true，则必须重启应用
mysqlJdbcRealm.cachingEnabled = false
#permissionsLookupEnabled会根据role查询role关联的permissions，如果为false，仅返回roles名称列表
mysqlJdbcRealm.permissionsLookupEnabled = true
mysqlJdbcRealm.authenticationQuery = SELECT password FROM user WHERE user_name = ?
mysqlJdbcRealm.userRolesQuery = SELECT role_name FROM user_role WHERE user_name = ?
mysqlJdbcRealm.permissionsQuery = SELECT permission FROM role_permission WHERE role_name = ?
mysqlJdbcRealm.credentialsMatcher = $sha256Matcher

#稻田rest用户身份鉴别接口
ditechRestRealm = org.apache.zeppelin.realm.RestAuthRealm
ditechRestRealm.authRestEndPoint=http://localhost:8083/auth
#ditechRestRealm.authRestEndPoint=http://ditech.jd.com/authMgt/auth
#以下是部署的测试接口，TODO：上线时需要修改成实际的
#ditechRestRealm.authRestEndPoint = http://ditech.tunnel.phpor.me/authMgt/auth

#sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.subjectDAO.sessionStorageEvaluator.sessionStorageEnabled = false

### If caching of user is required then uncomment below lines
cacheManager = org.apache.shiro.cache.MemoryConstrainedCacheManager
securityManager.cacheManager = $cacheManager
#使用2个rleam，前一个用来请求稻田进行Authentication，后一个用来进行Authorization
securityManager.realms = $ditechRestRealm, $mysqlJdbcRealm
#securityManager.sessionManager = $sessionManager
# 7200000 milliseconds = 2hour
#securityManager.sessionManager.globalSessionTimeout = 7200000
#shiro.loginUrl = /api/login

;[roles]
;group_member_teamA = *
;group_leader_teamA= *
;group_member_teamB = *
;admin = *


[urls]
# This section is used for url-based security.
# You can secure interpreter, configuration and credential information by urls. Comment or uncomment the below urls that you want to hide. 
# anon means the access is anonymous.
# authc means Form based Auth Security
# To enfore security, comment the line below and uncomment the next one
/api/version = anon


#TODO:test url not visiable for no admin
#/api/interpreter/** = authc, roles[admin]
/api/configurations/** = authc, roles[admin]
/api/credential/** = authc, roles[admin]
#/** = anon
/** = authc
